##############################
# Explore my work schedule from a google sheet where I log
# my travel time to Hartford, CT with IFTTT
##############################
library(magrittr)
################
# data clean
################
# install googlesheets
library(googlesheets)
sheet <- gs_url("https://docs.google.com/spreadsheets/d/1EFH_QytjB661YUe0VKZkuik-wx-v_w2sJvL12IiEMOY/edit?usp=sharing",
lookup = T)
install.packages("googlesheets")
################
# data clean
################
# install googlesheets
library(googlesheets)
# register the google sheet as a URL with share ability enable
sheet <- gs_url("https://docs.google.com/spreadsheets/d/1EFH_QytjB661YUe0VKZkuik-wx-v_w2sJvL12IiEMOY/edit?usp=sharing",
lookup = T)
# read the sheet in
time_sheet <- sheet %>% gs_read(ws = "Sheet1")
View(time_sheet)
head(time_sheet)
sapply(time_sheet, class)
# remove duplicates
time_sheet <- time_sheet[-c(96:98),]
# extract date from time
library(stringr)
date <-str_extract_all(string=time_sheet$date_time, pattern='\\w+\\s\\d+(st)?(nd)?(rd)?(th)?,\\s+\\d+')
time_sheet$date <- date
# extract out the time to a separate column
time <- str_extract_all(string=time_sheet$date_time, pattern='\\b((1[0-2]|0?[1-9]):([0-5][0-9])([AaPp][Mm]))')
time_sheet$time <- time
View(time_sheet)
# transform the types for later data munging
library(lubridate)
time_sheet$date_format <- mdy(time_sheet$date)
time_sheet$time <- as.character(time_sheet$time)
head(time_sheet)
# remove the second column
time_sheet = time_sheet[, -c(2)]
# look at a data frame with specific types of exit, enter times
library(dplyr)
exit <- filter(time_sheet, type == 'exited')
enter <- filter(time_sheet, type == 'entered')
# merge the two, which will align the dates with enter and exit time labels
merge_time_sheet <- merge(enter, exit, by = 'date_format')
# remove duplicate middle columns of unformatted date and labels
merge_time_sheet = merge_time_sheet[, -c(2:3, 5:6)]
# change column names
colnames(merge_time_sheet) <- c("date", "enter_time", "exit_time")
head(merge_time_sheet)
# format the time column to get the difference from enter and exit (in seconds)
merge_time_sheet$time_diff <- strptime(merge_time_sheet$enter_time, "%H:%M%p") - strptime(merge_time_sheet$exit_time, "%H:%M%p")
View(merge_time_sheet)
merge_time_sheet$time_diff <- abs(merge_time_sheet$time_diff)
# change seconds into hours (3600 in an hour)
merge_time_sheet$time_diff <- merge_time_sheet$time_diff / 3600
# so I travel through hartford alot on the highway or walk around
# hartford for lunch, so I want to remove small time diff observations
merge_time_sheet = merge_time_sheet[-c(which(merge_time_sheet$time_diff < 3.51666666666667)), ]
# round time diff
merge_time_sheet$time_diff <- round(merge_time_sheet$time_diff, 2)
#################
# time summaries
#################
mean(merge_time_sheet$time_diff) # mean of 5.1 hours (even though it says secs)
##########
# data viz
##########
library(ggplot2)
work_hrs <- ggplot(merge_time_sheet, aes(date, c(time_diff))) +
geom_bar(color = "dodgerblue") +
xlab("") +
ylab("Working Hours")
work_hrs
ggplot(merge_time_sheet, aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
xlab("") +
ylab("Working Hours")
library(plotly)
ggplotly(work_hrs)
install.packages("plotly")
Sys.getenv()
merge_time_sheet %>% dplyr::filter(date <= as.Date("2017-10-17")) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
xlab("") +
ylab("Working Hours")
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17")) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
xlab("") +
work_hrs <-
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17")) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
xlab("") +
ylab("Working Hours")
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17")) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
xlab("") +
ylab("Working Hours")
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
xlab("") +
ylab("Working Hours")
library(dumas)
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_jasmine() +
xlab("") +
ylab("Working Hours")
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_jasmine(title = "Extrapolated working hours from location check-ins",
subtitle = "") +
xlab("") +
ylab("Working Hours")
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_minimal() +
theme_jasmine(title = "Extrapolated working hours from location check-ins",
subtitle = "") +
xlab("") +
ylab("Working Hours")
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_minimal() +
theme_jasmine(title = "Extrapolated working hours from location check-ins",
subtitle = "", x = "", y = "Working Hours")
work_hrs <-
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_minimal() +
theme_jasmine(title = "Extrapolated working hours from location check-ins",
subtitle = "Hartford, CT", x = "", y = "Working Hours")
work_hrs
library(plotly)
ggplotly(work_hrs)
devtools::install_github('hadley/ggplot2')
work_hrs <-
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_minimal() +
theme_jasmine(title = "Extrapolated working hours from location check-ins",
subtitle = "Hartford, CT", x = "", y = "Working Hours")
work_hrs
merge_time_sheet %>% dplyr::filter(date <= as.Date("2016-10-17"), time_diff >= mean(time_diff)) %>%
ggplot(., aes(date, time_diff)) +
geom_col(color = "dodgerblue") +
theme_minimal() +
theme_jasmine(title = "Extrapolated working hours from location check-ins",
subtitle = "Hartford, CT", x = "", y = "Working Hours")
hi <- 5
?filter
View(iris)
q()
